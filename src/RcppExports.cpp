// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// distance_cpp
arma::Cube<double> distance_cpp(List features, DataFrame Xtrain, DataFrame Xtest, int ncomb, double sigma);
RcppExport SEXP _shapr_distance_cpp(SEXP featuresSEXP, SEXP XtrainSEXP, SEXP XtestSEXP, SEXP ncombSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type features(featuresSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type Xtrain(XtrainSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type Xtest(XtestSEXP);
    Rcpp::traits::input_parameter< int >::type ncomb(ncombSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(distance_cpp(features, Xtrain, Xtest, ncomb, sigma));
    return rcpp_result_gen;
END_RCPP
}
// impute_cpp
arma::Mat<double> impute_cpp(arma::Cube<int> I, DataFrame Xtrain, DataFrame Xtest, List features);
RcppExport SEXP _shapr_impute_cpp(SEXP ISEXP, SEXP XtrainSEXP, SEXP XtestSEXP, SEXP featuresSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::Cube<int> >::type I(ISEXP);
    Rcpp::traits::input_parameter< DataFrame >::type Xtrain(XtrainSEXP);
    Rcpp::traits::input_parameter< DataFrame >::type Xtest(XtestSEXP);
    Rcpp::traits::input_parameter< List >::type features(featuresSEXP);
    rcpp_result_gen = Rcpp::wrap(impute_cpp(I, Xtrain, Xtest, features));
    return rcpp_result_gen;
END_RCPP
}
// sample_cpp
arma::Cube<int> sample_cpp(arma::Cube<double> D, int nsamples, int ncomb);
RcppExport SEXP _shapr_sample_cpp(SEXP DSEXP, SEXP nsamplesSEXP, SEXP ncombSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::Cube<double> >::type D(DSEXP);
    Rcpp::traits::input_parameter< int >::type nsamples(nsamplesSEXP);
    Rcpp::traits::input_parameter< int >::type ncomb(ncombSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_cpp(D, nsamples, ncomb));
    return rcpp_result_gen;
END_RCPP
}
// weighted_matrix
arma::Mat<double> weighted_matrix(List comb, NumericVector w, int m, int n);
RcppExport SEXP _shapr_weighted_matrix(SEXP combSEXP, SEXP wSEXP, SEXP mSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type comb(combSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type w(wSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(weighted_matrix(comb, w, m, n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_shapr_distance_cpp", (DL_FUNC) &_shapr_distance_cpp, 5},
    {"_shapr_impute_cpp", (DL_FUNC) &_shapr_impute_cpp, 4},
    {"_shapr_sample_cpp", (DL_FUNC) &_shapr_sample_cpp, 3},
    {"_shapr_weighted_matrix", (DL_FUNC) &_shapr_weighted_matrix, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_shapr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
